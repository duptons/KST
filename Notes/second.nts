## vim: set syntax=python : ##

## IT '成长型' 技能树 ##
## create 2016-05-26 ##
## update 2017-03-23 ##

from mzx.Job import Technique


""" 学习一门技术最快速的方法是动手做一个项目出来，尤其这个项目是你感兴趣的时候 """
def 技能列表(args):
	1、前端技能
		HTML5  CSS Less SCSS
		JavaScript  (Bootstrap  Jquery/Jquery Mobile  Zepto.js  Vue.js)  Ajax
		React   Font Awesome
		seajs  requireJS    AngularJS
		移动端适配方案
		node.js (npm) ace.js
		TypeScript

	2、后台技能
		1> 平台
			Linux Windows
		2> 服务器
			Nginx Apache
		3> 语言
			PHP Python shell
		4> 数据库
			MySQL PostgreSQL MongoDB Redis
		5> 包管理器
			pip


def 标准(args):
	1、熟悉前端框架如 Jquery Bootstrap AngularJS 等

	2、了解 React Vue.js 的基本场景应用


def Web前端(args):
	1、前端设计理念林总
		1> 极简风格，避免视觉冗余
		1> 主色调的选择非常重要（配色最好和公司文化以及核心经营理念挂钩）
		3> 配色统一化，最忌混着用（让产品更容易形成品牌效应）
		4> 学习优秀的APP设计风格理念绝对没有错
		5> 单色调与组合色调

	2、适配移动端
		移动端火热的当下，业务型Web势必要支持web APP形式展现，而最好的做法不是强行适配移动端，应该基于移动端设计新的一套展现方案，即一套PC Web，加上一套mobile Web，二者在展现上实现独立，然后针对不同分辨率的移动端优化mobileWeb方案，达成各种屏幕适配的效果。

		1> 设计稿 (尺寸 w * h，基于移动端，如iphone6s 物理像素w=750pt，设备独立像素w=375pt)
		2> 切图
		3> 前端代码
		4> 移动端适配方案
			1) 固定高度，宽度自适应
				使用小宽度的设计稿，如320px，元素尽量适用于横向拉伸，适当于间距中填充空白
				(img  max-width=100%)    (背景  background-size)
				<meta name="viewport" content="width=device-width,initial-scale=1">
			2) 固定宽度，viewport缩放
				完全等价视觉稿切图，完全视觉稿CSS尺寸
				(限制相对比较多)
			3) rem 布局
				rem 是一个相对尺寸，相对于根 html 的 font-size。弹性布局的最好尺寸。
				<meta name="viewport" content="initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no">

			viewport 可以理解为包裹在 html 元素外层的元素
			(viewport)
				width = 
					[1]document.documentElement.clientWidth(不包含滚动条，源自IE)
					[2]window.innerWidth(包含滚动条，源自非IE)
					(浏览器大战导致的历史遗留不一)
			(html)
				width = document.documentElement.offsetWidth
			总结：一般地，在html不特别设置width的时候，html元素和viewport是重合的


# =====================  E  =============  N  =============  D  ===================== #



